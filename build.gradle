/*
 * Enklume
 * Java library for parsing Minecraft save files 
 */

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven'

version = '100'

group = 'io.xol.enklume'
description = ' Java library for parsing Minecraft save files '

repositories {
	mavenLocal()
	mavenCentral()
	
	maven { url 'https://jitpack.io' }
}

ext {
	useEclipseCompiler = true
}

buildscript {
	repositories {
		mavenCentral()
	}
}

compileJava {
	options.encoding = 'utf-8'
}

jar {
	//I don't like numbers in my jars
	version = null
}

compileJava.options.debugOptions.debugLevel = "source,lines,vars"

configurations {
	deployerJars
}

dependencies {
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	
	deployerJars "org.apache.maven.wagon:wagon-ssh:2.12" //<-- fuck this fuck this fuck this
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

//Bundle that with the API jar :)
artifacts {
	archives sourcesJar
	archives javadocJar
}

javadoc {
	//Our current javadoc isn't exactly too compliant :')
	failOnError = false
}

//Create a properties.gradle with login credentials to use this.
//Watch out: wagon-ssh is an old mess and WILL NOT TAKE EdDSA host keys
//You MUST ask the server for one of those and replace whatever you had for it in known_hosts
if(hasProperty('uploadUsername')) {
	println 'Login credentials found'
	uploadArchives {
		repositories {
				mavenDeployer {
       				configuration = configurations.deployerJars	
					
					if(project.hasProperty('uploadPrivateKey')) {
						println 'Found private key'
						repository(url: "scp://xol.io/home/maven-user/maven-repo") {				
							authentication(userName: uploadUsername, privateKey: uploadPrivateKey)
		    				}
					}
					else {
						println 'Found password'
						repository(url: "scp://xol.io/home/maven-user/maven-repo") {				
							authentication(userName: uploadUsername, password: uploadPassword)
		    				}
					}
				}
		}
	}
}
